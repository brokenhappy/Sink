FILE fqName:foo.bar fileName:/simple.kt
  CLASS INTERFACE name:Bar modality:ABSTRACT visibility:internal superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Bar
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:Baz modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Baz
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:Foo modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Foo
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN GENERATED[org.jetbrains.kotlin.compiler.plugin.template.ir.SinkPluginKey] name:Bar visibility:internal modality:FINAL <> ($receiver:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache) returnType:foo.bar.Bar
    $receiver: VALUE_PARAMETER name:$receiver type:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache
    BLOCK_BODY
      RETURN type=foo.bar.Bar from='internal final fun Bar (): foo.bar.Bar declared in foo.bar'
        CALL 'public abstract fun computeIfAbsent <T> (key: kotlin.Any?, compute: kotlin.Function0<T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent>): T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent declared in org.jetbrains.kotlin.compiler.plugin.template.InjectionCache' type=foo.bar.Bar origin=GeneratedBySink
          <T>: foo.bar.Bar
          $this: GET_VAR '$receiver: org.jetbrains.kotlin.compiler.plugin.template.InjectionCache declared in foo.bar.Bar' type=org.jetbrains.kotlin.compiler.plugin.template.InjectionCache origin=GeneratedBySink
          key: CONST String type=kotlin.String value="foo.bar.Bar"
          compute: FUN_EXPR type=kotlin.Function0<foo.bar.Bar> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:foo.bar.Bar
              BLOCK_BODY
                RETURN type=foo.bar.Bar from='local final fun <anonymous> (): foo.bar.Bar declared in foo.bar.Bar'
                  CALL 'private final fun bar (): foo.bar.Bar declared in foo.bar' type=foo.bar.Bar origin=GeneratedBySink
  FUN GENERATED[org.jetbrains.kotlin.compiler.plugin.template.ir.SinkPluginKey] name:Baz visibility:public modality:FINAL <> ($receiver:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache) returnType:foo.bar.Baz
    $receiver: VALUE_PARAMETER name:$receiver type:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache
    BLOCK_BODY
      RETURN type=foo.bar.Baz from='public final fun Baz (): foo.bar.Baz declared in foo.bar'
        CALL 'public abstract fun computeIfAbsent <T> (key: kotlin.Any?, compute: kotlin.Function0<T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent>): T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent declared in org.jetbrains.kotlin.compiler.plugin.template.InjectionCache' type=foo.bar.Baz origin=GeneratedBySink
          <T>: foo.bar.Baz
          $this: GET_VAR '$receiver: org.jetbrains.kotlin.compiler.plugin.template.InjectionCache declared in foo.bar.Baz' type=org.jetbrains.kotlin.compiler.plugin.template.InjectionCache origin=GeneratedBySink
          key: CONST String type=kotlin.String value="foo.bar.Baz"
          compute: FUN_EXPR type=kotlin.Function0<foo.bar.Baz> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:foo.bar.Baz
              BLOCK_BODY
                RETURN type=foo.bar.Baz from='local final fun <anonymous> (): foo.bar.Baz declared in foo.bar.Baz'
                  CALL 'private final fun baz (foo: foo.bar.Foo, bar: foo.bar.Bar): foo.bar.Baz declared in foo.bar' type=foo.bar.Baz origin=GeneratedBySink
                    foo: CALL 'public final fun Foo (): foo.bar.Foo declared in foo.bar' type=foo.bar.Foo origin=GeneratedBySink
                      $receiver: GET_VAR '$receiver: org.jetbrains.kotlin.compiler.plugin.template.InjectionCache declared in foo.bar.Baz' type=org.jetbrains.kotlin.compiler.plugin.template.InjectionCache origin=GeneratedBySink
                    bar: CALL 'internal final fun Bar (): foo.bar.Bar declared in foo.bar' type=foo.bar.Bar origin=GeneratedBySink
                      $receiver: GET_VAR '$receiver: org.jetbrains.kotlin.compiler.plugin.template.InjectionCache declared in foo.bar.Baz' type=org.jetbrains.kotlin.compiler.plugin.template.InjectionCache origin=GeneratedBySink
  FUN GENERATED[org.jetbrains.kotlin.compiler.plugin.template.ir.SinkPluginKey] name:Foo visibility:public modality:FINAL <> ($receiver:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache) returnType:foo.bar.Foo
    $receiver: VALUE_PARAMETER name:$receiver type:org.jetbrains.kotlin.compiler.plugin.template.InjectionCache
    BLOCK_BODY
      RETURN type=foo.bar.Foo from='public final fun Foo (): foo.bar.Foo declared in foo.bar'
        CALL 'public abstract fun computeIfAbsent <T> (key: kotlin.Any?, compute: kotlin.Function0<T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent>): T of org.jetbrains.kotlin.compiler.plugin.template.InjectionCache.computeIfAbsent declared in org.jetbrains.kotlin.compiler.plugin.template.InjectionCache' type=foo.bar.Foo origin=GeneratedBySink
          <T>: foo.bar.Foo
          $this: GET_VAR '$receiver: org.jetbrains.kotlin.compiler.plugin.template.InjectionCache declared in foo.bar.Foo' type=org.jetbrains.kotlin.compiler.plugin.template.InjectionCache origin=GeneratedBySink
          key: CONST String type=kotlin.String value="foo.bar.Foo"
          compute: FUN_EXPR type=kotlin.Function0<foo.bar.Foo> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:foo.bar.Foo
              BLOCK_BODY
                RETURN type=foo.bar.Foo from='local final fun <anonymous> (): foo.bar.Foo declared in foo.bar.Foo'
                  CALL 'private final fun foo (): foo.bar.Foo declared in foo.bar' type=foo.bar.Foo origin=GeneratedBySink
  FUN name:bar visibility:private modality:FINAL <> () returnType:foo.bar.Bar
    annotations:
      Injectable
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun bar (): foo.bar.Bar declared in foo.bar'
        BLOCK type=foo.bar.bar.<no name provided> origin=OBJECT_LITERAL
          CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Bar]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.bar.<no name provided>
            CONSTRUCTOR visibility:public <> () returnType:foo.bar.bar.<no name provided> [primary]
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Bar]' type=kotlin.Unit
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
              overridden:
                public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Bar
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              VALUE_PARAMETER name:other index:0 type:kotlin.Any?
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
              overridden:
                public open fun hashCode (): kotlin.Int declared in foo.bar.Bar
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
              overridden:
                public open fun toString (): kotlin.String declared in foo.bar.Bar
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          CONSTRUCTOR_CALL 'public constructor <init> () declared in foo.bar.bar.<no name provided>' type=foo.bar.bar.<no name provided> origin=OBJECT_LITERAL
  FUN name:baz visibility:private modality:FINAL <> (foo:foo.bar.Foo, bar:foo.bar.Bar) returnType:foo.bar.Baz
    annotations:
      Injectable
    VALUE_PARAMETER name:foo index:0 type:foo.bar.Foo
    VALUE_PARAMETER name:bar index:1 type:foo.bar.Bar
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun baz (foo: foo.bar.Foo, bar: foo.bar.Bar): foo.bar.Baz declared in foo.bar'
        BLOCK type=foo.bar.baz.<no name provided> origin=OBJECT_LITERAL
          CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Baz]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.baz.<no name provided>
            CONSTRUCTOR visibility:public <> () returnType:foo.bar.baz.<no name provided> [primary]
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Baz]' type=kotlin.Unit
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
              overridden:
                public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              VALUE_PARAMETER name:other index:0 type:kotlin.Any?
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
              overridden:
                public open fun hashCode (): kotlin.Int declared in foo.bar.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
              overridden:
                public open fun toString (): kotlin.String declared in foo.bar.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          CONSTRUCTOR_CALL 'public constructor <init> () declared in foo.bar.baz.<no name provided>' type=foo.bar.baz.<no name provided> origin=OBJECT_LITERAL
  FUN name:foo visibility:private modality:FINAL <> () returnType:foo.bar.Foo
    annotations:
      Injectable
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun foo (): foo.bar.Foo declared in foo.bar'
        BLOCK type=foo.bar.foo.<no name provided> origin=OBJECT_LITERAL
          CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Foo]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.foo.<no name provided>
            CONSTRUCTOR visibility:public <> () returnType:foo.bar.foo.<no name provided> [primary]
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[foo.bar.Foo]' type=kotlin.Unit
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
              overridden:
                public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              VALUE_PARAMETER name:other index:0 type:kotlin.Any?
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
              overridden:
                public open fun hashCode (): kotlin.Int declared in foo.bar.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
              overridden:
                public open fun toString (): kotlin.String declared in foo.bar.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          CONSTRUCTOR_CALL 'public constructor <init> () declared in foo.bar.foo.<no name provided>' type=foo.bar.foo.<no name provided> origin=OBJECT_LITERAL
FILE fqName:_main_.__sink_metadata__ fileName:__File_Name_That_A_Plugin_Must_Provide_For_No_Apparent_Reason__
  FUN GENERATED[org.jetbrains.kotlin.compiler.plugin.template.ir.SinkPluginKey] name:sinkMetadata visibility:public modality:FINAL <> () returnType:kotlin.Unit
    annotations:
      _SinkMetadata(data = "{"injectionFunctions":[{"name":"foo.bar.Foo","parameters":[]},{"name":"foo.bar.Baz","parameters":[]}],"services":[]}")
    BLOCK_BODY
