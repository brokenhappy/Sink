FILE fqName:<root> fileName:/indirectExternalDependency.kt
  CLASS INTERFACE name:Bar modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Bar
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:Baz modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Baz
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:Foo modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Foo
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN GENERATED[com.woutwerkman.sink.ir.SinkPluginKey] name:Baz visibility:public modality:FINAL <> ($receiver:com.woutwerkman.sink.InjectionCache, bar:<root>.Bar) returnType:<root>.Baz
    $receiver: VALUE_PARAMETER name:$receiver type:com.woutwerkman.sink.InjectionCache
    VALUE_PARAMETER GENERATED[com.woutwerkman.sink.ir.SinkPluginKey] name:bar index:0 type:<root>.Bar
    BLOCK_BODY
      RETURN type=<root>.Baz from='public final fun Baz (bar: <root>.Bar): <root>.Baz declared in <root>'
        CALL 'public abstract fun computeIfAbsent <T> (key: kotlin.Any?, compute: kotlin.Function0<T of com.woutwerkman.sink.InjectionCache.computeIfAbsent>): T of com.woutwerkman.sink.InjectionCache.computeIfAbsent declared in com.woutwerkman.sink.InjectionCache' type=<root>.Baz origin=GeneratedBySink
          <T>: <root>.Baz
          $this: GET_VAR '$receiver: com.woutwerkman.sink.InjectionCache declared in <root>.Baz' type=com.woutwerkman.sink.InjectionCache origin=GeneratedBySink
          key: CONST String type=kotlin.String value="Baz"
          compute: FUN_EXPR type=kotlin.Function0<<root>.Baz> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<root>.Baz
              BLOCK_BODY
                RETURN type=<root>.Baz from='local final fun <anonymous> (): <root>.Baz declared in <root>.Baz'
                  CALL 'public final fun baz (foo: <root>.Foo): <root>.Baz declared in <root>' type=<root>.Baz origin=GeneratedBySink
                    foo: CALL 'public final fun Foo (bar: <root>.Bar): <root>.Foo declared in <root>' type=<root>.Foo origin=GeneratedBySink
                      $receiver: GET_VAR '$receiver: com.woutwerkman.sink.InjectionCache declared in <root>.Baz' type=com.woutwerkman.sink.InjectionCache origin=GeneratedBySink
                      bar: GET_VAR 'bar: <root>.Bar declared in <root>.Baz' type=<root>.Bar origin=GeneratedBySink
  FUN GENERATED[com.woutwerkman.sink.ir.SinkPluginKey] name:Foo visibility:public modality:FINAL <> ($receiver:com.woutwerkman.sink.InjectionCache, bar:<root>.Bar) returnType:<root>.Foo
    $receiver: VALUE_PARAMETER name:$receiver type:com.woutwerkman.sink.InjectionCache
    VALUE_PARAMETER GENERATED[com.woutwerkman.sink.ir.SinkPluginKey] name:bar index:0 type:<root>.Bar
    BLOCK_BODY
      RETURN type=<root>.Foo from='public final fun Foo (bar: <root>.Bar): <root>.Foo declared in <root>'
        CALL 'public abstract fun computeIfAbsent <T> (key: kotlin.Any?, compute: kotlin.Function0<T of com.woutwerkman.sink.InjectionCache.computeIfAbsent>): T of com.woutwerkman.sink.InjectionCache.computeIfAbsent declared in com.woutwerkman.sink.InjectionCache' type=<root>.Foo origin=GeneratedBySink
          <T>: <root>.Foo
          $this: GET_VAR '$receiver: com.woutwerkman.sink.InjectionCache declared in <root>.Foo' type=com.woutwerkman.sink.InjectionCache origin=GeneratedBySink
          key: CONST String type=kotlin.String value="Foo"
          compute: FUN_EXPR type=kotlin.Function0<<root>.Foo> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<root>.Foo
              BLOCK_BODY
                RETURN type=<root>.Foo from='local final fun <anonymous> (): <root>.Foo declared in <root>.Foo'
                  CALL 'public final fun foo (bar: <root>.Bar): <root>.Foo declared in <root>' type=<root>.Foo origin=GeneratedBySink
                    bar: GET_VAR 'bar: <root>.Bar declared in <root>.Foo' type=<root>.Bar origin=GeneratedBySink
  FUN name:baz visibility:public modality:FINAL <> (foo:<root>.Foo) returnType:<root>.Baz
    annotations:
      Injectable
    VALUE_PARAMETER name:foo index:0 type:<root>.Foo
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun baz (foo: <root>.Foo): <root>.Baz declared in <root>'
        BLOCK type=<root>.baz.<no name provided> origin=OBJECT_LITERAL
          CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.Baz]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.baz.<no name provided>
            CONSTRUCTOR visibility:public <> () returnType:<root>.baz.<no name provided> [primary]
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.Baz]' type=kotlin.Unit
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
              overridden:
                public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              VALUE_PARAMETER name:other index:0 type:kotlin.Any?
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
              overridden:
                public open fun hashCode (): kotlin.Int declared in <root>.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
              overridden:
                public open fun toString (): kotlin.String declared in <root>.Baz
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.baz.<no name provided>' type=<root>.baz.<no name provided> origin=OBJECT_LITERAL
  FUN name:foo visibility:public modality:FINAL <> (bar:<root>.Bar) returnType:<root>.Foo
    annotations:
      Injectable
    VALUE_PARAMETER name:bar index:0 type:<root>.Bar
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun foo (bar: <root>.Bar): <root>.Foo declared in <root>'
        BLOCK type=<root>.foo.<no name provided> origin=OBJECT_LITERAL
          CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.Foo]
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.foo.<no name provided>
            CONSTRUCTOR visibility:public <> () returnType:<root>.foo.<no name provided> [primary]
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.Foo]' type=kotlin.Unit
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
              overridden:
                public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              VALUE_PARAMETER name:other index:0 type:kotlin.Any?
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
              overridden:
                public open fun hashCode (): kotlin.Int declared in <root>.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
              overridden:
                public open fun toString (): kotlin.String declared in <root>.Foo
              $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.foo.<no name provided>' type=<root>.foo.<no name provided> origin=OBJECT_LITERAL
FILE fqName:_main_.__sink_metadata__ fileName:__File_Name_That_A_Plugin_Must_Provide_For_No_Apparent_Reason__
  FUN GENERATED[com.woutwerkman.sink.ir.SinkPluginKey] name:sinkMetadata visibility:public modality:FINAL <> () returnType:kotlin.Unit
    annotations:
      _SinkMetadata(data = "ASDASD")
    BLOCK_BODY
